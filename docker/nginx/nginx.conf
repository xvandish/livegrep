user www-data;
worker_processes  2;

error_log /dev/stdout;
daemon off;

events {
  worker_connections  2048;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  log_format nelhage 'remote_addr=$remote_addr time_local=[$time_local] '
                     'connection_id=$connection '
                     'connection_requests=$connection_requests '
                     'request=$request status=$status '
                     'request_time=$request_time '
                     'upstream_response_time=$upstream_response_time '
                     'upstream_connect_time=$upstream_connect_time '
                     'upstream_header_time=$upstream_header_time '
                     'upstream_bytes_received=$upstream_bytes_received '
                     'bytes_sent=$bytes_sent '
                     'referer=$http_referer user_agent=$http_user_agent '
                     'host=$host scheme=$scheme';

  map $request_uri $loggable {
    ~^/debug/ 0;
    default   1;
  }
  access_log /dev/stdout nelhage if=$loggable;

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;

  # https://cloud.google.com/load-balancing/docs/https#timeouts_and_retries
  # Google Rec for HTTP(S) load balanced things is a keepalive_timeout of 620s
  keepalive_timeout  620s;
  # we are running on Nginx 1.18.0, where the default is 100
  # In 1.19.10 onward, the default is 1000
  keepalive_requests 10000;

  # most searches response sizes will be ~40k, so up the size of the
  # buffers accordingly (from 8 4K|8K). With large max_matches searches
  # we have potentially huge responses, but we'll cap the buffer size
  # at 256kb, which should be more than enough for almost all searches
  proxy_buffers 8 32k;

  gzip  on;
  gzip_http_version 1.0;
  gzip_comp_level 2;
  gzip_proxied any;
  gzip_vary off;
  gzip_types text/plain text/css application/x-javascript text/xml application/xml application/rss+xml application/atom+xml text/javascript application/javascript application/json text/mathml;
  gzip_min_length  1000;
  gzip_disable     "MSIE [1-6]\.";

  server_names_hash_bucket_size 64;
  types_hash_max_size 2048;
  types_hash_bucket_size 64;

  upstream backend {
    server 127.0.0.1:8910;

    # keep 1024 idle conns (max) around
    keepalive 1024;
  }

  server {
    listen 80 default_server;

    if ($http_x_forwarded_proto = "http") {
      return 301 https://$host$request_uri;
    }

    location = /healthz {
      access_log off;
      proxy_set_header Host $http_host;
      proxy_set_header X-NginX-Proxy true;
      proxy_pass http://backend;
      proxy_redirect off;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "";
    }

    location / {
      root /livegrep/web/htdocs;
      try_files $uri @proxy;
    }

    location @proxy {
      proxy_set_header Host $http_host;
      proxy_set_header X-NginX-Proxy true;
      proxy_pass http://backend;
      proxy_redirect off;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "";
    }
  }

  include /var/run/config/nginx/*.conf;
}
